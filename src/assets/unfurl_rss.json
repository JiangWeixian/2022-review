[
  {
    "week": 29,
    "url": "https://overreacted.io/goodbye-clean-code/",
    "tag": "developers",
    "type": "twitter_share",
    "meta": {
      "title": "Goodbye, Clean Code — Overreacted",
      "description": "Let clean code guide you. Then let it go.",
      "open_graph": {
        "url": "https://overreacted.io/goodbye-clean-code/",
        "title": "Goodbye, Clean Code",
        "description": "Let clean code guide you. Then let it go."
      },
      "twitter_card": {
        "card": "summary",
        "creator": "@dan_abramov",
        "title": "Goodbye, Clean Code",
        "description": "Let clean code guide you. Then let it go."
      },
      "favicon": "https://overreacted.io/favicon-32x32.png?v=8c19a894ebc3f54d282a8f2418cf5398"
    },
    "summary": [
      "Firstly, I didn’t talk to the person who wrote it. I rewrote the code and checked it in without their input. Even if it was an improvement (which I don’t believe anymore), this is a terrible way to go about it. A healthy engineering team is constantly building trust. Rewriting your teammate’s code without a discussion is a huge blow to your ability to effectively collaborate on a codebase together.",
      "Secondly, nothing is free. My code traded the ability to change requirements for reduced duplication, and it was not a good trade. For example, we later needed many special cases and behaviors for different handles on different shapes. My abstraction would have to become several times more convoluted to afford that, whereas with the original “messy” version such changes stayed easy as cake."
    ]
  }
]
